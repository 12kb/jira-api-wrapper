import { IApplicationProperties } from "./api/iApplicationProperties";
import { IApplicationrole } from "./api/iApplicationrole";
import { IAttachment } from "./api/iAttachment";
import { IAuditing } from "./api/iAuditing";
import { IAvatar } from "./api/iAvatar";
import { IBacklog } from "./api/iBacklog";
import { IBoard } from "./api/iBoard";
import { IBuilds } from "./api/iBuilds";
import { IComment } from "./api/iComment";
import { IComponent } from "./api/iComponent";
import { IConfiguration } from "./api/iConfiguration";
import { ICustomFieldOption } from "./api/iCustomFieldOption";
import { IDashboard } from "./api/iDashboard";
import { IDeployments } from "./api/iDeployments";
import { IDevelopmentInformation } from "./api/iDevelopmentInformation";
import { IEpic } from "./api/iEpic";
import { IExpression } from "./api/iExpression";
import { IFeatureFlags } from "./api/iFeatureFlags";
import { IField } from "./api/iField";
import { IFilter } from "./api/iFilter";
import { IGroup } from "./api/iGroup";
import { IGroups } from "./api/iGroups";
import { IGroupUserPicker } from "./api/iGroupUserPicker";
import { IIssue } from "./api/iIssue";
import { IJql } from "./api/IJql";
import { IMyself } from "./api/iMyself";
import { INotificationScheme } from "./api/iNotificationScheme";
import { ISearch } from "./api/iSearch";
import { ISession } from "./api/iSession";
import { ISprint } from "./api/iSprint";
import { IWorklog } from "./api/iWorklog";
export interface IJiraApi {
    host: string;
    port: number;
    protocol: string;
    pathPrefix: string;
    apiVersion: number | string;
    agileApiVersion: number | string;
    authApiVersion: number | string;
    webhookApiVersion: number | string;
    devInfoApiVersion: number | string;
    featureFlagsApiVersion: number | string;
    deploymentApiVersion: number | string;
    buildsApiVersion: number | string;
    oauth?: {
        consumerKey: string;
        privateKey: string;
        token: string;
        tokenSecret: string;
        signatureMethod: string;
    } | undefined;
    basicAuth?: {
        base64?: string;
        username?: string;
        password?: string;
    } | undefined;
    cookieJar?: any;
    rejectUnauthorized?: any;
    cert: any;
    key: any;
    ca?: any;
    strictSSL?: boolean;
    applicationProperties: IApplicationProperties;
    applicationrole: IApplicationrole;
    attachment: IAttachment;
    auditing: IAuditing;
    avatar: IAvatar;
    backlog: IBacklog;
    board: IBoard;
    comment: IComment;
    component: IComponent;
    configuration: IConfiguration;
    customFieldOption: ICustomFieldOption;
    dashboard: IDashboard;
    epic: IEpic;
    expression: IExpression;
    field: IField;
    filter: IFilter;
    group: IGroup;
    groups: IGroups;
    groupUserPicker: IGroupUserPicker;
    issue: IIssue;
    notificationScheme: INotificationScheme;
    jql: IJql;
    myself: IMyself;
    search: ISearch;
    sprint: ISprint;
    worklog: IWorklog;
    session: ISession;
    builds: IBuilds;
    deployments: IDeployments;
    developmentInformation: IDevelopmentInformation;
    featureFlags: IFeatureFlags;
    makeUrl(path: string, apiType: 'agile' | 'api' | 'auth' | 'webhook' | 'devInfo' | 'featureFlags' | 'deployment' | 'builds' | string, apiVersion?: number | string): any;
    sendRequest(options: any, callback: any, successString?: string): any;
}
